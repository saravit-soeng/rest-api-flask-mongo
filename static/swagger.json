{
    "swagger": "2.0",
    "info": {
        "description": "Restful API with Flask and Mongo",
        "version": "1.0",
        "title": "Swagger Demo",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "soengsaravit@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:5000",
    "basePath": "/",
    "tags": [
        {
            "name": "Restful API DEMO",
            "description": "Restful API with Flask and MongoDB"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/api/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get All Users",
                "description": "Get all users from database",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by id",
                "description": "Get specific user by id from database",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be queried",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/user/add": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add user",
                "description": "Add new user to database",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref":"#/components/schemas/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/user/update": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "description": "Update user by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref":"#/components/schemas/UpdatedUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/user/delete/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user by id",
                "description": "Delete specific user by id from database",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be queried",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        }
    },
    "components":{
        "schemas":{
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "UpdatedUser": {
                "type": "object",
                "properties": {
                    "_id":{
                        "type":"string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }
        }
    }
}